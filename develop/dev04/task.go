package main

/*
=== Поиск анаграмм по словарю ===

Напишите функцию поиска всех множеств анаграмм по словарю.
Например:
'пятак', 'пятка' и 'тяпка' - принадлежат одному множеству,
'листок', 'слиток' и 'столик' - другому.

Входные данные для функции: ссылка на массив - каждый элемент которого - слово на русском языке в кодировке utf8.
Выходные данные: Ссылка на мапу множеств анаграмм.
Ключ - первое встретившееся в словаре слово из множества
Значение - ссылка на массив, каждый элемент которого, слово из множества. Массив должен быть отсортирован по возрастанию.
Множества из одного элемента не должны попасть в результат.
Все слова должны быть приведены к нижнему регистру.
В результате каждое слово должно встречаться только один раз.

Программа должна проходить все тесты. Код должен проходить проверки go vet и golint.
*/

import (
	"fmt"
	"sort"
	"strings"
)

func getId(str string) string {
	arr := strings.Split(str, "")
	sort.Strings(arr)
	return strings.Join(arr, "")
}

func An(input []string) map[string][]string {
	ret := make(map[string][]string)
	retKey := make(map[string]string)

	for _, v := range input {
		v = strings.ToLower(v)
		id := getId(v)

		k, ok := retKey[id]
		if !ok {
			k = v
			retKey[id] = k
		}

		ret[k] = append(ret[k], v)
	}

	for k, v := range ret {
		if 2 > len(v) {
			delete(ret, k)
		} else {
			sort.Strings(v)
		}
	}

	return ret
}

func main() {
	input := []string{"пятак", "пятка", "тяпка", "листок", "слиток", "столик", "привет", "ба1", "1аб"}
	fmt.Println(An(input))
}
